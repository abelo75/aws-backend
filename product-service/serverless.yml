service: product-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  profile: default
  region: eu-west-1
  stage: dev
  httpApi:
    cors: true

functions:
  getProductsById:
    handler: handler.getProductsById
    events:
      - httpApi:
          method: GET
          path: /products/{productId}
  getProductsList:
    handler: handler.getProductsList
    events:
      - httpApi:
          method: GET
          path: /products
      #    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

plugins:
  - serverless-webpack
  - serverless-openapi-documentation

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true # enable auto-packing of external modules


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
